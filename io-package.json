{
  "common": {
    "name": "valloxmv",
    "version": "1.1.1",
    "news": {
      "1.1.0": {
        "en": "Added new measurements and parameters",
        "de": "Neue Messpunkte und Parameter hinzugefügt"
      },
      "1.0.3": {
        "en": "Fixed adapter checker issues",
        "de": "Fixed adapter checker issues"
      },
      "1.0.2": {
        "en": "Fixed issue writing objects",
        "de": "Problem beim Schreiben von Objekten behoben"
      },
      "1.0.1": {
        "en": "Fixed resetting custom configuration of objects",
        "de": "Überschreiben manuell veränderter Objekt-Konfiguration behoben"
      },
      "1.0.0": {
        "en": "Changed role of r/w booleans to switches, fixed empty drop downs",
        "de": "r/w booleans als switch deklariert, leere Drop Down Felder behoben"
      },
      "0.1.3": {
        "en": "Added expert settins",
        "de": "Experteneinstellungen hinzugefügt"
      },
      "0.1.2": {
        "en": "Initial release for testing",
        "de": "Erstes Release für Tests"
      }
    },
    "title": "ValloxMV",
    "titleLang": {
      "en": "ValloxMV Adapter",
      "de": "ValloxMV Adapter"
    },
    "desc": {
      "en": "ioBroker ValloxMV Adapter",
      "de": "ioBroker ValloxMV Adapter"
    },
    "authors": [
      "hacki11 <jur.schmid@gmail.com>"
    ],
    "keywords": [
      "ioBroker",
      "template",
      "Smart Home",
      "home automation",
      "Vallox"
    ],
    "license": "MIT",
    "platform": "Javascript/Node.js",
    "main": "main.js",
    "icon": "valloxmv.png",
    "enabled": true,
    "extIcon": "https://raw.githubusercontent.com/hacki11/ioBroker.valloxmv/master/admin/valloxmv.png",
    "readme": "https://github.com/hacki11/ioBroker.valloxmv/blob/master/README.md",
    "loglevel": "info",
    "mode": "daemon",
    "type": "climate-control",
    "compact": true,
    "materialize": true,
    "dependencies": [
      {
        "admin": ">=3.0.0"
      },
      {
        "js-controller": ">=1.4.2"
      }
    ]
  },
  "native": {
    "host": "",
    "port": "80",
    "interval": "60"
  },
  "objects": [],
  "instanceObjects": [
    {
      "_id": "info",
      "type": "channel",
      "common": {
        "name": "Information"
      },
      "native": {}
    },
    {
      "_id": "info.connection",
      "type": "state",
      "common": {
        "role": "indicator.connected",
        "name": "Device or service connected",
        "type": "boolean",
        "read": true,
        "write": false,
        "def": false
      },
      "native": {}
    }
  ]
}